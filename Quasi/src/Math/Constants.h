#pragma once
#include "Utils/Numeric.h"

namespace Quasi::Math {
#define NUM_LIMITS(T, V) std::numeric_limits<T>::V()
#define CONSTANT static constexpr
#define MATH_CONSTANT(X, V) CONSTANT f32 X = (f32)(V); CONSTANT f64 X##64 = V;
    MATH_CONSTANT(TAU, 6.28318'53071'79586'47692'52867);
    MATH_CONSTANT(PI,  3.14159'26535'89793'23946'26433);
    MATH_CONSTANT(HALF_PI,    PI * 0.5);
    MATH_CONSTANT(QUARTER_PI, PI * 0.25);
    
    MATH_CONSTANT(E,     2.71828'18284'59045'23536'02874);
    MATH_CONSTANT(INV_E, 0.36787'94411'71442'32159'55238);
    MATH_CONSTANT(LN_2,  0.69314'71805'59945'30941'72321);

    MATH_CONSTANT(ROOT_2,      1.41421'35623'73095'04880'16887);
    MATH_CONSTANT(HALF_ROOT_2, ROOT_2 * 0.5);
    MATH_CONSTANT(INV_ROOT_2,  HALF_ROOT_2);
    
    MATH_CONSTANT(ROOT_3,      1.73205'08075'68877'29352'74463);
    MATH_CONSTANT(HALF_ROOT_3, ROOT_3 * 0.5);
    MATH_CONSTANT(INV_ROOT_3,  1 / ROOT_3);

    MATH_CONSTANT(SIN_30, HALF_ROOT_3);
    MATH_CONSTANT(COS_30, 0.5);
    MATH_CONSTANT(SIN_45, INV_ROOT_2);
    MATH_CONSTANT(COS_45, SIN_45);
    MATH_CONSTANT(SIN_60, COS_30);
    MATH_CONSTANT(COS_60, SIN_30);

    MATH_CONSTANT(ROOT_5, 2.23606'79774'99789'69640'91737);
    MATH_CONSTANT(PHI,    1.61803'39887'49894'84820'45868);

    MATH_CONSTANT(DEG2RAD, PI / 180);
    MATH_CONSTANT(RAD2DEG, 180 / PI);

    inline double operator ""_deg(long double deg) {
        return (double)deg * DEG2RAD;
    }
    inline float operator ""_degf(long double deg) {
        return (float)deg * DEG2RAD;
    }

#undef MATH_CONSTANT
#undef CONSTANT
#undef NUM_LIMITS
}
